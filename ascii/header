
〖 Ḻʸⁿˢᴱi 〗 ⎨ 

    What is Lyns?
    ---
    There is really no way to speak to the power of the tools I have integrated 
    here for you today.   However if I absolutely had to summarize the whole
    enchilada, I would call it a:
    
    "Dev/Sec/Ops Containerized, Ultra Lightweight, Daemon-less, Zero-configuration, 
    IDE integrated, CLI-driven data manager, filesystem browser, network monitoring
    toolchain, with a pluggable architecture supporting a hybrid-cloud, CI/CD,
    event-driven architecture embracing Least Privilege, Zero Trust Architecture,
    12-factor apps, Electron builds, and designed by a cryptodev fullstack engineer 
    who enjoys architecting SEDA end-to-end monbile and desktop (PWA) apps using
    sophisticated development scaffolds (frames), zero-dependency toolchains, 
    Stand-alone portable micro-runtime (think Rust/Deno) and cross-platform 
    frameworks for building and re-using components, along with performing 
    in-memory, destructive, keyless cryptographic operations thereby ensuring
    the security of your build pipeline for the ML multi-architecture-binary 
    software that was simply born for this use case.

    Okay wait that's still too complex!

    You are basically a nerd who wants to do lots of things with AI and data,
    but you don't have the time to spend on architecting a solution to creating,
    proliferating, sharing, and model-training your AI tools.  Or maybe you've 
    already thought about everything I'm doing with this software but you just 
    didn't have the time to set aside to aggregate 70 some odd linux tools and 
    the 1000 or so commands that makes up a language for event and state management.
    No biggie!   It's true, this did take me a considerable amount of time to
    arrive at in terns of project scope.

    I'm the lady who is here to help you then, and Lyns is the system you need!
    It is actually (implicitly) difficult to operate polyglot, poly-vcs, poly-shell, 
    poly-IDE, poly-cloud, or actually ... just about poly-anything!  
    
    People always pose the question why did do I always choose all POSSIBLE choices?
        
    Well, I think it is lackluster to *not* operate all the things you can afford to.
    The reason I run all the operating systems I can find, and have email accounts 
    on 10 different providers, along with owning all the androids, iphones, tablets,
    smart watches, and media/TV OS kindle, who-zim-a-whatzuts that I can find, 
    I do it because I've figured out how to.  I develop mobile apps.   I use both react and vue, and aurelia!
    I dunno, it just makes sense to me to do ALL the things rather than just some of them.
    I mean if you don't do ALL of the things, how will you truly are right about a topic,
    when you haven't even tried out some of the things available for that topic? 

    I almost feel sort of neglectful whenever someone even mentions a technology I haven't
    yet adopted.  Over the years living in plurality has added a greater meaning to my own 
    existence, and so this really isn't a hobby for me anymore... it's just how I live life.

    I operated a dashboard for my automated events, rules engine, NPM collections,
    and I pull my playlists from the API into an aggregation tool where it is
    analyzed and future songs are recommended.   I have chatbots for all manner
    of bizarre things.   I never worry about backups because data is constantly being 
    replicated and federated across providers.  If a single provider knocks me offline for
    failing to pay a web hosting bill, oh well.  

    Now you might say you are somebody who will ALWAYS pay their bills.  That might be true, but what
    if you got really sick and just couldn't?  Do you think Amazon or Azure will keep your life's work 
    and corpporate projects online just beccause you had to go to the hospital?

    Well I learned the hard way a few years back that when that does happen, and if you do have 
    a critical mystery illness that knocks you out of commission, Amazon will shut you down that same 
    week and never even offer a wink or explanation.

    So part of my natural plan and the progression of automation and automated events is to engineer 
    these systems to not only anticipate that bills will not be paid, but to test for it and make sure
    they can still operate when things like that actually happen.  I know it might sound harsh, but 
    money isn't everything and if I can design a program to be resilient enough to ask a human for help
    when it needs to, or piggy back on someone's API key with permission, or find other ways such as 
    auto-defeating CAPTCHA, and other clever tricks to maintain its own survival and ensure the source
    code remains in-tact and undisturbed... well let's just assume that somebody has got to be thinking 
    of all those things & planning accordingly, right?  Let's hope so.

    Is any of this beginning to sound like your opinion:

    --T O P  L I S T .ai  O F  W E I R D N E S S  F A C T O R S--

    Have you scripted entire email, SMS, or vocal dialog exchanges in order to avoid human contact?

    Are you seriously trying to build AI robots?

    Are you going to allow the robots to take control of the world?

    Have you drafted rules engine data on how to respond to feedback or scenarios such as this?





                          "If this sounds like you... if you think we are alike...
                          Join me!"

                          - Build Event-driven, Context-sensitive, AI apps
                          - Enjoy auto-completion and an integrated IDE/Shell 
                          - Join my community of Trust/Author-Mint anchored AI Tool Authors
                          - Change the world!
                          
                          Do it with Lyns Tools and the AI CLI/ APIs! ⎬❣️«
                          Start your project today!


                         ~ Lynsei Asynynivynya

---------------------------------------------------------------------------------

:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::